---
import Nav from "../components/Nav.astro";
import Footer from "../components/Footer.astro";

import VideoSection from "../components/Lesson/VideoSection.astro";
import LessonHeader from "../components/Lesson/LessonHeader.astro";
import LessonContent from "../components/Lesson/LessonContent.astro";
import LessonFooter from "../components/Lesson/LessonFooter.astro";

const { frontmatter } = Astro.props;

const lecciones = await Astro.glob('../content/lessons/*.mdx');
const nextLessonData = lecciones.find((l) => {
	return parseInt(l.frontmatter.index) === (parseInt(frontmatter.index) + 1)
});

---

<!doctype html>
<html lang="es">
	<head>
    	<meta charset="UTF-8" />
    	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
    	<title>Leccion {frontmatter.index} | {frontmatter.title}</title>

        <!-- Boostrap 5 and Latex -->
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex/dist/katex.min.css">
		<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">

  	</head>

  	<body>
		<header class="background-animation">
			<Nav />
			<!-- Seccion del video -->
			<VideoSection src={frontmatter.video} />
		</header>

		<main class="container">
			<LessonHeader title={frontmatter.title} index={frontmatter.index} />

            <hr class="hr-pink">

            <LessonContent><slot/></LessonContent>
		</main>

		<LessonFooter nextLesson={nextLessonData ? nextLessonData.frontmatter : lecciones[0].frontmatter} />
		
		<Footer />

  	</body>
</html>

<style is:global>
    @import "../styles/global.scss";

    @keyframes animatedBackground {
        from {
            background-position: 0 0;
        }
        to {
            background-position: 0 -100%;
        }
    }

    header {
        background-image: url('../assets/my-background.png');
        background-repeat: repeat-y;
        animation: animatedBackground 20s linear infinite;
    }
	
</style>